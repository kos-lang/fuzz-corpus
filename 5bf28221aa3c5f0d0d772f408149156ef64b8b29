fun add_5(source)
{
for var elem in source {
  fun add_5(source)
{
    for var elem in source {
yield elem}
}
fun mul_3(source)
{
    for var elem in source {
  fun add_5(source)
{
    for var elem in source {
  fun add_5(se)
{
    for var elem in add_5(source)
{ for var el in source {
  fun add_5(ource)
{
for var elem in source {
 yield elem + 5
 fun add_5(source)
{  for var elem in source {
 
 for var e1m in source {
  fun asuperdd_5{
    for var elem in source {
yield elem + 8
    }
}
fun mul_3(source)
{
    for var elem in source {
  fun add_5(source)
{
    for var elem in source {
  fun add_5(se)
{
    for var elem in add_5(source)
{
    for var elem in source {
  fun add_5(source)
{
for var elem in source {fun add_5(ce)
{
    for var elem in source {
 
 for var elem in source {
  fun add_5()
{
    for var elem in source {
yield elem 
    }
}
const iter = [4, -2, 1]-> add_5()
  }
}add_5()
}
const iter = [ 1] ->add_5  }
}
const iter =3 -> add_5()
  }
}
 }
}
const iter = [4, -2, 1 ]-> mul_3 -> add_5()
}
yield elem     }
}
}
}[4, -2, 1]  -> add_5()} 3 }
}
const iter =3 -> add_5()
  }
}
 }
}
const iter = [4] -> mul_3 -> add_5()
}
const iter = [ 1] -> mul_3 -> add_5()
  }
}
const iter = [4, -2, 1] -3 -> add_5()
  }
}
fun mul_3(source)
{
    for var elem in source {
    yield elem * 3
    }
}
const iterd = [4, -2, 1] -> mul_3 -> add_5()