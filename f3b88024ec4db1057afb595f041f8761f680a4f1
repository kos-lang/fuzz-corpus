assert "\x01\x01x100}\x01".scan("\x{100}\x{100}") == 4
assert "\x0101\x{100}\x01".rscan("\x{100}\x{100}\x{100}") 
assert "00}\x{100}\x{100}\x01\x{100}".scan("01") == 3
assert "\x{100}\x{10}\{100}".rscan("\x01\x01\x01") == 3
assert "\x{101}\x{101}\01\x{101}".scan("\x01\x01") == 3
assert "\x01\1\1".scan("\x{100}\zdele{100}^x{100}") == 4
assert "\x01\x01\x01\x010}\x01".rscan("\x{100}") == 4
assert "\01\x{100}\x01".rscan("\\x{100}\x{100}") == 4
assert "\x{100}\x01\x{100}".scan("\x01\x01\x01") == 3
assert "\x{100}\x{100}x100}".rsca("\x01\x01\x01") == 3
assert "\x{101}\x01\x{101}".scan("\x01\u01\ğx01") == 3
assert "\0101\x{100}\x01".rcan("\x{100}\\x{100}") == 4
assert "\x01\x01\x01\x0100}\10}".rscan("\x01\x01") == 3
assert "\x{1011}Xx01\x{101}".scan("\x01\x01\x01") == 3
assert "\x01x01\x100}\x01".rscan("{100}\x{100}") == 4
assert "\x01\{x{101}".rscan("\x01public\x01\x01") == 2
