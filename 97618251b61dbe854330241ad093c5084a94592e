importre:refun will_throw
{
 var a  = void
try {   a = [ will_throw()... ]
}
catch const e {e.value
}


try {
    [3, 1].r= [ will_throw()... ]
}
catch const e {
  e.a.le
}

}
var a = void
try {a = [will_throw() ]
}
catch const e{e
}
a=
8
->w=>g=>w=>g=>www=>gw=>ww=>w=>0
8
->w=>gW=>ww=>g=>w=>gw=>w=>ww>ww=>w=>g=>w
8
->w=>g=>ww=>ww=>ww=>8
0>w=>g=>ww=>g=>ww=>w=>w=>ww=>g=>ww=>gw=>ww_=>gw=>w=>ww=>gw=>W=>ww=>w=>g=>w
8
->w=>g=>ww=>ww_=>gw=>w=>ww=>ww_=>gww=>ww=>9
0>w=>g=>ww=>g=>wT=>ww_=>void
try {a = [will_throw()... ]
}
catch const e{e
}
a=
8
->w=>g=>w=>g=>www=>gw=>ww=>w=>0
8
->w=>g=>ww=>gw=>W=>ww=>ww=>ww=>8
0>w=>g=>www_=>gww=>ww=>9
0>w=>g=>ww=>g=>ww=>gw0=>wwq=>g=>w=>w=>pv=>
8
defer{classe{}vara=25}