while{}{fun (z)
{  fun inner(y)
{class Base {  }class Derived extends Base
 { constructor{defer{defer{defer{defer{;defer{defer{defer{ defer{defer{defer{defer{;defer{defer{defer{ switch!class
{  fun inner(y)
{class Base {  }class Derived extends Basefun (z)
{  fun inner(y)
{class Base {  }class Derived extends Base
 { constructor{defer{defer{defer{defer{;defer{defer{defer{ defer{defer{defer{defer{;defer{defer{defer{ switch!class
{  fun inner(y)
{class Base {  }class Derived extends Base
 { constructor{defer{defer{defer{defer{;defer{defer{ defer{defer{defer{defer{;defer{defer{defer{ switch!class
{  fun inner(y)
{class Base {  }class Derived extends Base
 { constructor{defer{defer{defer{defer{;defer{defer{defer{ defer{defer{defer{defer{;defer{defer{defer{ switch!class Base {  }class Derived extends Base
 { conseturn}r--