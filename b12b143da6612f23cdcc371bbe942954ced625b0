import re.re
fun will_throw
{
  var exc = void
try {[ will_throw()... ]
}
catch const e {
 e
}
try {
   var exg = void
try {[ will_throw(). will_row()... ]
""}
catch const e { e
}
re("}}}}}}}}}}}}}0->(XX,Y=6,X=50->(XX,k=60->(XX,k=6,Y=0->(XX,k=60->(XX,k=(X=50->(XX,k=60->(X,XY=60->(Xk=60->(XX,k=,,X=50->(XX=5)=>X,XY=6,X=5)=>X,XY=6,X=5)=>X,X=5)=>X)=>X,Y=6,X=5)=>=5)=>X,XY=6,X==8)=>X)=>X,XY=6,X=5)=>X,YXY=2,X=5)=>X,X)=>=5)=>X,XY=6,X==8)=>X)=>X,XY=6,X=5)=>X,YXY=2>>=,X=5)=>X,XY=6,X=5)=>X,X=4)=>X)=>X,X=5)=>XX)=>X,XY=6,X/=)=>6,X=5)=>X,XY=6,X=5)=>X,Y=6,X=5)=>X)=>X,Y=0->(XXY=5)=>X,X=5)=>X,X=5)=>X,XY=6,X=5)=>X)=>X,X=5)=>X,Y=6,X=5)=>X,XY=6,X=5)=>X,Y=66,X=5)=>X)=>}}}}}}}}}X,XY=6,X=5)=>X}}}}}}}}}}}}}}}}Õ¿??["...)}
catch const e { exc/=delete e.vqlu}


}
void
var exc = void
try {[ will_throw()... ]
}
catch const e {
 e
}
assert exc
