importre:refun will_throw
{

}
var a = //>w=>5
8
->ww=>w=>g=>w
8
->w=>g=>www=>g=>ww=>w=>w=>w>ww=>gw=>W=>fun (z)
{  fun inner(y)
{class Base {  }class Derived extends Base
 { constructor{defer{defer{defer{defer{;defer{defer{defer{ defer{defer{defer{defer{;defer{defer{defer{switch!3{case-64,2,5,65>6,this,5:{1}}   super()
  w_=>void
try {a = [will_throw()... ]
}
catch const e{e
}
a+=
8
>4
0>w=> "v"
>g=>w=>gww=>9
0>w=>g=>w>g=>w=>0
8
->w=>pv=>
8
defer{5#)
.su()
 super()
}return}return}return}}return}return} 
}return}return}return}}return}}  }  }} Derived(y)
}
   inner(z)
}