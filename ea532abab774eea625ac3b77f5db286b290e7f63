const bobo = fun
{
 class bobo extends void {
    conr{
     fun
{
     class bobo  {
n
{
     class bobo extends void {    truc {
    class bobo extends void {con{fun
{
     class bobo extends void {
n
{
     class bobo extends void {
        co {
  fun{
     class bobo {
    }
    return bobo
} ()
     }
    }
    return bobo
}   }
    return bobo
} ()
var o = bobo()
        class bobo {
 cons{fun
{
     class bobo extends void {
n
{
     class bobo extends void {
        ru {
    class bobo extends void {
 on{
     fun
{
     class bobo extends void {
n{
     class bobo  {or(a) {
     fun
{
     class bobo extends void {
  }
    return bobo
} ()
var o = bobo()
}
    }
  return bobo
}   }
    return bobo
} ()
var o = bobo()  }
    }
     fun
{
     class bobo extends void {
    }  return bobo
} ()    }  }
return bobo
}    }
    return bobo
} ()
o = bobo()
  }
    }  }
  }
     fun
{
     class bobo extends void {
    }
    return bobo
} ()  }
    }
    return bobo
}    }
    return bobo
} ()
var o = bobo()
     }
    }
   bobo
} 