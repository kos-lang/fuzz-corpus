importre:refun will_throw
{
 var a   = void
try { [ will_throw()... ]
}
catch const e {e.value
}


try { [3, 3, 1].rers = [ will_throw()... ]
}
catch const e {
  e.a.le
}

}
var a = void
try {a = [will_throw()... ]
}
catch const e{e
}
a=
8
->w=>g=>w=>g=>www=>gw=>ww=>w=>0
8
->w=>g=>ww=>gw=>W=>ww_=>gw=>w=>ww=>ww_=>gww=>ww=>9
0>w=>g=>ww=>g=>ww>ww_=>gw=>ww=>w=>0
8
->w=>g=>wg=>w=>ww=>ww=>w=>g=>rw=>ww_=>void
try {a = [will_throw()... ]
}
catch const e{e
}
a=
8
->w=>g=>w=>g=>www=>gw=>ww=>w=>w=>g=>ww=>gw=>W=>ww=>g=>w=>gw=>w=>www=>w=>g=>w
8
->w=>gw=>ww=>ww_=>gww=>ww=>9
0>w=>g=>ww=>g=>ww=>gw=>ww_=>g=>w=>0
8->w=>pv=>
8
defer{vara=25}