fun make_it(z)
{ fun inner(y)
    {
var b = 102
class Base
    {
     }
class Derived extends Base
        {
    constructor(x)
    {    super()
  super()
   %             super#)
&&                  super()
      super#)            super()
&&        super()
super#()
&&          super#)
&&              super()
                super()
&&        super()
&&                  super()
   %             super#)#)
&&      super#)
&&       super()
&&        super()
super()
&&              super#)
&          super#)
&&                  super()
super()
&&             super
&&         super()
             super
&&           super()
&&                  super()
   %             super#)per()
     super()
         super
&&                            super#)
&          super#)
&&     super
&&            super#)
&&                  super()
                 super
&&                     super()
   %             super#)
&&                     super
&&           super()
&&           typeof super()
   %     super#)per()
                    super()
   super()
         super
&&               super         }
        }
        return Derived(y)
    }inner(z)
}
const o = make_it(92)
assert o.Bas
assert o.c == 103
